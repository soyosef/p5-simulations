{"id":"Ray3d.js","dependencies":[{"name":"/Users/yos/code/experimentos/p5/Garden/package.json","includedInParent":true,"mtime":1606759920255}],"generated":{"js":"// class Ray3d {\n//   constructor(origin, dir) {\n//     this.origin = origin\n//     this.dir = dir\n//     this.dir.normalize()\n//     this.intersection = createVector()\n//   }\n//   position(pos) {\n//     this.pos = pos\n//     this.dir.normalize()\n//   }\n//   direction(dir) {\n//     this.dir = p5.Vector.sub(dir, this.origin)\n//     this.dir.normalize()\n//   }\n//   boxIntersection({ pos, size }) {\n//     // returns null or the intersection point\n//     let inter = []\n//     intersection(\n//       inter,\n//       [this.origin.x, this.origin.y, this.origin.z],\n//       [this.dir.x, this.dir.y, this.dir.z],\n//       [\n//         [pos.x, pos.y, pos.z],\n//         [size.x, size.y, size.z],\n//       ]\n//     )\n//     if (inter == null) {\n//       this.intersection = null\n//     } else {\n//       this.intersection = createVector(inter[0], inter[1], inter[2])\n//     }\n//     return this.intersection\n//   }\n//   drawIntersection() {\n//     push()\n//     translate(this.intersection)\n//     noStroke()\n//     fill('red')\n//     sphere(5)\n//     pop()\n//   }\n//   drawRay() {\n//     push()\n//     stroke(255)\n//     line(this.origin.x, this.origin.y, this.origin.z, this.dir.x * 100, this.dir.y * 100, this.dir.z * 100)\n//     pop()\n//   }\n// }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"Ray3d.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"Ray3d.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"Ray3d.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"Ray3d.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"Ray3d.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"Ray3d.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"Ray3d.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"Ray3d.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":0},"source":"Ray3d.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":0},"source":"Ray3d.js","original":{"line":11,"column":0}},{"generated":{"line":11,"column":0},"source":"Ray3d.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":0},"source":"Ray3d.js","original":{"line":14,"column":0}},{"generated":{"line":13,"column":0},"source":"Ray3d.js","original":{"line":15,"column":0}},{"generated":{"line":14,"column":0},"source":"Ray3d.js","original":{"line":16,"column":0}},{"generated":{"line":15,"column":0},"source":"Ray3d.js","original":{"line":17,"column":0}},{"generated":{"line":16,"column":0},"source":"Ray3d.js","original":{"line":19,"column":0}},{"generated":{"line":17,"column":0},"source":"Ray3d.js","original":{"line":20,"column":0}},{"generated":{"line":18,"column":0},"source":"Ray3d.js","original":{"line":21,"column":0}},{"generated":{"line":19,"column":0},"source":"Ray3d.js","original":{"line":22,"column":0}},{"generated":{"line":20,"column":0},"source":"Ray3d.js","original":{"line":23,"column":0}},{"generated":{"line":21,"column":0},"source":"Ray3d.js","original":{"line":24,"column":0}},{"generated":{"line":22,"column":0},"source":"Ray3d.js","original":{"line":25,"column":0}},{"generated":{"line":23,"column":0},"source":"Ray3d.js","original":{"line":26,"column":0}},{"generated":{"line":24,"column":0},"source":"Ray3d.js","original":{"line":27,"column":0}},{"generated":{"line":25,"column":0},"source":"Ray3d.js","original":{"line":28,"column":0}},{"generated":{"line":26,"column":0},"source":"Ray3d.js","original":{"line":29,"column":0}},{"generated":{"line":27,"column":0},"source":"Ray3d.js","original":{"line":30,"column":0}},{"generated":{"line":28,"column":0},"source":"Ray3d.js","original":{"line":32,"column":0}},{"generated":{"line":29,"column":0},"source":"Ray3d.js","original":{"line":33,"column":0}},{"generated":{"line":30,"column":0},"source":"Ray3d.js","original":{"line":34,"column":0}},{"generated":{"line":31,"column":0},"source":"Ray3d.js","original":{"line":35,"column":0}},{"generated":{"line":32,"column":0},"source":"Ray3d.js","original":{"line":36,"column":0}},{"generated":{"line":33,"column":0},"source":"Ray3d.js","original":{"line":38,"column":0}},{"generated":{"line":34,"column":0},"source":"Ray3d.js","original":{"line":39,"column":0}},{"generated":{"line":35,"column":0},"source":"Ray3d.js","original":{"line":41,"column":0}},{"generated":{"line":36,"column":0},"source":"Ray3d.js","original":{"line":42,"column":0}},{"generated":{"line":37,"column":0},"source":"Ray3d.js","original":{"line":43,"column":0}},{"generated":{"line":38,"column":0},"source":"Ray3d.js","original":{"line":44,"column":0}},{"generated":{"line":39,"column":0},"source":"Ray3d.js","original":{"line":45,"column":0}},{"generated":{"line":40,"column":0},"source":"Ray3d.js","original":{"line":46,"column":0}},{"generated":{"line":41,"column":0},"source":"Ray3d.js","original":{"line":47,"column":0}},{"generated":{"line":42,"column":0},"source":"Ray3d.js","original":{"line":48,"column":0}},{"generated":{"line":43,"column":0},"source":"Ray3d.js","original":{"line":50,"column":0}},{"generated":{"line":44,"column":0},"source":"Ray3d.js","original":{"line":51,"column":0}},{"generated":{"line":45,"column":0},"source":"Ray3d.js","original":{"line":52,"column":0}},{"generated":{"line":46,"column":0},"source":"Ray3d.js","original":{"line":53,"column":0}},{"generated":{"line":47,"column":0},"source":"Ray3d.js","original":{"line":54,"column":0}},{"generated":{"line":48,"column":0},"source":"Ray3d.js","original":{"line":55,"column":0}},{"generated":{"line":49,"column":0},"source":"Ray3d.js","original":{"line":56,"column":0}}],"sources":{"Ray3d.js":"// class Ray3d {\n//   constructor(origin, dir) {\n//     this.origin = origin\n//     this.dir = dir\n//     this.dir.normalize()\n//     this.intersection = createVector()\n//   }\n\n//   position(pos) {\n//     this.pos = pos\n//     this.dir.normalize()\n//   }\n\n//   direction(dir) {\n//     this.dir = p5.Vector.sub(dir, this.origin)\n//     this.dir.normalize()\n//   }\n\n//   boxIntersection({ pos, size }) {\n//     // returns null or the intersection point\n//     let inter = []\n//     intersection(\n//       inter,\n//       [this.origin.x, this.origin.y, this.origin.z],\n//       [this.dir.x, this.dir.y, this.dir.z],\n//       [\n//         [pos.x, pos.y, pos.z],\n//         [size.x, size.y, size.z],\n//       ]\n//     )\n\n//     if (inter == null) {\n//       this.intersection = null\n//     } else {\n//       this.intersection = createVector(inter[0], inter[1], inter[2])\n//     }\n\n//     return this.intersection\n//   }\n\n//   drawIntersection() {\n//     push()\n//     translate(this.intersection)\n//     noStroke()\n//     fill('red')\n//     sphere(5)\n//     pop()\n//   }\n\n//   drawRay() {\n//     push()\n//     stroke(255)\n//     line(this.origin.x, this.origin.y, this.origin.z, this.dir.x * 100, this.dir.y * 100, this.dir.z * 100)\n//     pop()\n//   }\n// }\n"},"lineCount":null}},"error":null,"hash":"5acab547595c493ed92337dd737a01ba","cacheData":{"env":{}}}