{"version":3,"sources":["../libs/p5collide2d/p5.collide2d.js"],"names":["console","log","p5","prototype","_collideDebug","collideDebug","debugMode","collideRectRect","x","y","w","h","x2","y2","w2","h2","collideRectRectVector","p1","sz","p2","sz2","collideRectCircle","rx","ry","rw","rh","cx","cy","diameter","testX","testY","distance","dist","collideRectCircleVector","r","c","collideCircleCircle","d","d2","collideCircleCircleVector","collidePointCircle","collidePointCircleVector","p","collidePointEllipse","dx","dy","xx","yy","eyy","sqrt","abs","collidePointEllipseVector","collidePointRect","pointX","pointY","xW","yW","collidePointRectVector","point","collidePointLine","px","py","x1","y1","buffer","d1","lineLen","undefined","collidePointLineVector","collideLineCircle","inside1","inside2","distX","distY","len","dot","pow","closestX","closestY","onSegment","ellipse","collideLineCircleVector","collideLineLine","x3","y3","x4","y4","calcIntersection","intersection","uA","uB","intersectionX","intersectionY","collideLineLineVector","p3","p4","collideLineRect","left","right","top","bottom","collideLineRectVector","rsz","collidePointPoly","vertices","collision","next","current","length","vc","vn","collidePointPolyVector","collideCirclePoly","interior","centerInside","collideCirclePolyVector","collideRectPoly","inside","collideRectPolyVector","collideLinePoly","hit","collideLinePolyVector","vertice","collidePolyPoly","collidePolyPolyVector","collidePointTriangle","areaOrig","area1","area2","area3","collidePointTriangleVector","collidePointPoint","collidePointPointVector","collidePointArc","ax","ay","arcRadius","arcHeading","arcAngle","createVector","arcPos","radius","rotate","pointToArc","copy","sub","angle","angleBetween","collidePointArcVector","a"],"mappings":"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","file":"p5.collide2d.d5caeef3.js","sourceRoot":"..","sourcesContent":["/*\nRepo: https://github.com/bmoren/p5.collide2D/\nCreated by http://benmoren.com\nSome functions and code modified version from http://www.jeffreythompson.org/collision-detection\nVersion v0.7.3 | June 22, 2020\nCC BY-NC-SA 4.0\n*/\n\n\nconsole.log(\"### p5.collide v0.7.3 ###\")\n\np5.prototype._collideDebug = false;\n\np5.prototype.collideDebug = function(debugMode){\n    _collideDebug = debugMode;\n}\n\n/*~++~+~+~++~+~++~++~+~+~ 2D ~+~+~++~+~++~+~+~+~+~+~+~+~+~+~+*/\n\np5.prototype.collideRectRect = function (x, y, w, h, x2, y2, w2, h2) {\n  //2d\n  //add in a thing to detect rectMode CENTER\n  if (x + w >= x2 &&    // r1 right edge past r2 left\n      x <= x2 + w2 &&    // r1 left edge past r2 right\n      y + h >= y2 &&    // r1 top edge past r2 bottom\n      y <= y2 + h2) {    // r1 bottom edge past r2 top\n        return true;\n  }\n  return false;\n};\n\n// p5.vector version of collideRectRect\np5.prototype.collideRectRectVector = function(p1, sz, p2, sz2){\n  return p5.prototype.collideRectRect(p1.x, p1.y, sz.x, sz.y, p2.x, p2.y, sz2.x,sz2.y)\n}\n\n\np5.prototype.collideRectCircle = function (rx, ry, rw, rh, cx, cy, diameter) {\n  //2d\n  // temporary variables to set edges for testing\n  var testX = cx;\n  var testY = cy;\n\n  // which edge is closest?\n  if (cx < rx){         testX = rx       // left edge\n  }else if (cx > rx+rw){ testX = rx+rw  }   // right edge\n\n  if (cy < ry){         testY = ry       // top edge\n  }else if (cy > ry+rh){ testY = ry+rh }   // bottom edge\n\n  // // get distance from closest edges\n  var distance = this.dist(cx,cy,testX,testY)\n\n  // if the distance is less than the radius, collision!\n  if (distance <= diameter/2) {\n    return true;\n  }\n  return false;\n};\n\n// p5.vector version of collideRectCircle\np5.prototype.collideRectCircleVector = function(r, sz, c, diameter){\n  return p5.prototype.collideRectCircle(r.x,r.y, sz.x,sz.y, c.x,c.y, diameter)\n}\n\np5.prototype.collideCircleCircle = function (x, y,d, x2, y2, d2) {\n//2d\n  if( this.dist(x,y,x2,y2) <= (d/2)+(d2/2) ){\n    return true;\n  }\n  return false;\n};\n\n\n// p5.vector version of collideCircleCircle\np5.prototype.collideCircleCircleVector = function(p1,d, p2, d2){\n  return p5.prototype.collideCircleCircle(p1.x,p1.y,  d, p2.x,p2.y, d2)\n}\n\n\np5.prototype.collidePointCircle = function (x, y, cx, cy, d) {\n//2d\nif( this.dist(x,y,cx,cy) <= d/2 ){\n  return true;\n}\nreturn false;\n};\n\n// p5.vector version of collidePointCircle\np5.prototype.collidePointCircleVector = function(p, c, d){\n  return p5.prototype.collidePointCircle(p.x,p.y,c.x,c.y,  d)\n}\n\np5.prototype.collidePointEllipse = function (x, y, cx, cy, dx, dy) {\n  //2d\n  var rx = dx/2, ry = dy/2;\n  // Discarding the points outside the bounding box\n  if (x > cx + rx || x < cx - rx ||y > cy + ry || y < cy - ry) {\n\t\treturn false;\n  }\n  // Compare the point to its equivalent on the ellipse\n  var xx = x - cx, yy = y - cy;\n  var eyy = ry * this.sqrt(this.abs(rx * rx - xx * xx)) / rx;\n  return yy <= eyy && yy >= -eyy;\n};\n\n// p5.vector version of collidePointEllipse\np5.prototype.collidePointEllipseVector = function(p, c, d){\n  return p5.prototype.collidePointEllipse(p.x,p.y,c.x,c.y,d.x,d.y);\n}\n\np5.prototype.collidePointRect = function (pointX, pointY, x, y, xW, yW) {\n//2d\nif (pointX >= x &&         // right of the left edge AND\n    pointX <= x + xW &&    // left of the right edge AND\n    pointY >= y &&         // below the top AND\n    pointY <= y + yW) {    // above the bottom\n        return true;\n}\nreturn false;\n};\n\n// p5.vector version of collidePointRect\np5.prototype.collidePointRectVector = function(point, p1, sz){\n  return p5.prototype.collidePointRect(point.x, point.y, p1.x, p1.y, sz.x, sz.y);\n}\n\np5.prototype.collidePointLine = function(px,py,x1,y1,x2,y2, buffer){\n  // get distance from the point to the two ends of the line\nvar d1 = this.dist(px,py, x1,y1);\nvar d2 = this.dist(px,py, x2,y2);\n\n// get the length of the line\nvar lineLen = this.dist(x1,y1, x2,y2);\n\n// since floats are so minutely accurate, add a little buffer zone that will give collision\nif (buffer === undefined){ buffer = 0.1; }   // higher # = less accurate\n\n// if the two distances are equal to the line's length, the point is on the line!\n// note we use the buffer here to give a range, rather than one #\nif (d1+d2 >= lineLen-buffer && d1+d2 <= lineLen+buffer) {\n  return true;\n}\nreturn false;\n}\n\n// p5.vector version of collidePointLine\np5.prototype.collidePointLineVector = function(point,p1,p2, buffer){\n  return p5.prototype.collidePointLine(point.x,point.y, p1.x,p1.y, p2.x,p2.y, buffer);\n}\n\np5.prototype.collideLineCircle = function( x1,  y1,  x2,  y2,  cx,  cy,  diameter) {\n  // is either end INSIDE the circle?\n  // if so, return true immediately\n  var inside1 = this.collidePointCircle(x1,y1, cx,cy,diameter);\n  var inside2 = this.collidePointCircle(x2,y2, cx,cy,diameter);\n  if (inside1 || inside2) return true;\n\n  // get length of the line\n  var distX = x1 - x2;\n  var distY = y1 - y2;\n  var len = this.sqrt( (distX*distX) + (distY*distY) );\n\n  // get dot product of the line and circle\n  var dot = ( ((cx-x1)*(x2-x1)) + ((cy-y1)*(y2-y1)) ) / this.pow(len,2);\n\n  // find the closest point on the line\n  var closestX = x1 + (dot * (x2-x1));\n  var closestY = y1 + (dot * (y2-y1));\n\n  // is this point actually on the line segment?\n  // if so keep going, but if not, return false\n  var onSegment = this.collidePointLine(closestX,closestY,x1,y1,x2,y2);\n  if (!onSegment) return false;\n\n  // draw a debug circle at the closest point on the line\n  if(this._collideDebug){\n    this.ellipse(closestX, closestY,10,10);\n  }\n\n  // get distance to closest point\n  distX = closestX - cx;\n  distY = closestY - cy;\n  var distance = this.sqrt( (distX*distX) + (distY*distY) );\n\n  if (distance <= diameter/2) {\n    return true;\n  }\n  return false;\n}\n\n// p5.vector version of collideLineCircle\np5.prototype.collideLineCircleVector = function( p1,  p2,  c,  diameter){\n  return p5.prototype.collideLineCircle( p1.x,  p1.y,  p2.x,  p2.y,  c.x,  c.y,  diameter);\n}\np5.prototype.collideLineLine = function(x1, y1, x2, y2, x3, y3, x4, y4,calcIntersection) {\n\n  var intersection;\n\n  // calculate the distance to intersection point\n  var uA = ((x4-x3)*(y1-y3) - (y4-y3)*(x1-x3)) / ((y4-y3)*(x2-x1) - (x4-x3)*(y2-y1));\n  var uB = ((x2-x1)*(y1-y3) - (y2-y1)*(x1-x3)) / ((y4-y3)*(x2-x1) - (x4-x3)*(y2-y1));\n\n  // if uA and uB are between 0-1, lines are colliding\n  if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n\n    if(this._collideDebug || calcIntersection){\n      // calc the point where the lines meet\n      var intersectionX = x1 + (uA * (x2-x1));\n      var intersectionY = y1 + (uA * (y2-y1));\n    }\n\n    if(this._collideDebug){\n      this.ellipse(intersectionX,intersectionY,10,10);\n    }\n\n    if(calcIntersection){\n      intersection = {\n        \"x\":intersectionX,\n        \"y\":intersectionY\n      }\n      return intersection;\n    }else{\n      return true;\n    }\n  }\n  if(calcIntersection){\n    intersection = {\n      \"x\":false,\n      \"y\":false\n    }\n    return intersection;\n  }\n  return false;\n}\n\n\n// p5.vector version of collideLineLine\np5.prototype.collideLineLineVector = function(p1, p2, p3, p4, calcIntersection){\n  return p5.prototype.collideLineLine(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, calcIntersection);\n}\n\np5.prototype.collideLineRect = function(x1, y1, x2, y2, rx, ry, rw, rh, calcIntersection) {\n\n  // check if the line has hit any of the rectangle's sides. uses the collideLineLine function above\n  var left, right, top, bottom, intersection;\n\n  if(calcIntersection){\n     left =   this.collideLineLine(x1,y1,x2,y2, rx,ry,rx, ry+rh,true);\n     right =  this.collideLineLine(x1,y1,x2,y2, rx+rw,ry, rx+rw,ry+rh,true);\n     top =    this.collideLineLine(x1,y1,x2,y2, rx,ry, rx+rw,ry,true);\n     bottom = this.collideLineLine(x1,y1,x2,y2, rx,ry+rh, rx+rw,ry+rh,true);\n     intersection = {\n        \"left\" : left,\n        \"right\" : right,\n        \"top\" : top,\n        \"bottom\" : bottom\n    }\n  }else{\n    //return booleans\n     left =   this.collideLineLine(x1,y1,x2,y2, rx,ry,rx, ry+rh);\n     right =  this.collideLineLine(x1,y1,x2,y2, rx+rw,ry, rx+rw,ry+rh);\n     top =    this.collideLineLine(x1,y1,x2,y2, rx,ry, rx+rw,ry);\n     bottom = this.collideLineLine(x1,y1,x2,y2, rx,ry+rh, rx+rw,ry+rh);\n  }\n\n  // if ANY of the above are true, the line has hit the rectangle\n  if (left || right || top || bottom) {\n    if(calcIntersection){\n      return intersection;\n    }\n    return true;\n  }\n  return false;\n}\n\n// p5.vector version of collideLineRect\np5.prototype.collideLineRectVector = function(p1, p2, r, rsz, calcIntersection){\n  return p5.prototype.collideLineRect(p1.x, p1.y, p2.x, p2.y, r.x, r.y, rsz.x, rsz.y, calcIntersection);\n}\n\np5.prototype.collidePointPoly = function(px, py, vertices) {\n  var collision = false;\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current=0; current<vertices.length; current++) {\n\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current+1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = vertices[current];    // c for \"current\"\n    var vn = vertices[next];       // n for \"next\"\n\n    // compare position, flip 'collision' variable back and forth\n    if (((vc.y >= py && vn.y < py) || (vc.y < py && vn.y >= py)) &&\n         (px < (vn.x-vc.x)*(py-vc.y) / (vn.y-vc.y)+vc.x)) {\n            collision = !collision;\n    }\n  }\n  return collision;\n}\n\n// p5.vector version of collidePointPoly\np5.prototype.collidePointPolyVector = function(p1, vertices){\n  return p5.prototype.collidePointPoly(p1.x, p1.y, vertices);\n}\n\n// POLYGON/CIRCLE\np5.prototype.collideCirclePoly = function(cx, cy, diameter, vertices, interior) {\n\n  if (interior === undefined){\n    interior = false;\n  }\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current=0; current<vertices.length; current++) {\n\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current+1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = vertices[current];    // c for \"current\"\n    var vn = vertices[next];       // n for \"next\"\n\n    // check for collision between the circle and a line formed between the two vertices\n    var collision = this.collideLineCircle(vc.x,vc.y, vn.x,vn.y, cx,cy,diameter);\n    if (collision) return true;\n  }\n\n  // test if the center of the circle is inside the polygon\n  if(interior === true){\n    var centerInside = this.collidePointPoly(cx,cy, vertices);\n    if (centerInside) return true;\n  }\n\n  // otherwise, after all that, return false\n  return false;\n}\n\n// p5.vector version of collideCirclePoly\np5.prototype.collideCirclePolyVector = function(c, diameter, vertices, interior){\n  return p5.prototype.collideCirclePoly(c.x, c.y, diameter, vertices, interior);\n}\n\np5.prototype.collideRectPoly = function( rx, ry, rw, rh, vertices, interior) {\n  if (interior == undefined){\n    interior = false;\n  }\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current=0; current<vertices.length; current++) {\n\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current+1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = vertices[current];    // c for \"current\"\n    var vn = vertices[next];       // n for \"next\"\n\n    // check against all four sides of the rectangle\n    var collision = this.collideLineRect(vc.x,vc.y,vn.x,vn.y, rx,ry,rw,rh);\n    if (collision) return true;\n\n    // optional: test if the rectangle is INSIDE the polygon note that this iterates all sides of the polygon again, so only use this if you need to\n    if(interior === true){\n      var inside = this.collidePointPoly(rx,ry, vertices);\n      if (inside) return true;\n    }\n  }\n\n  return false;\n}\n\n// p5.vector version of collideRectPoly\np5.prototype.collideRectPolyVector = function(r, rsz, vertices, interior){\n  return p5.prototype.collideRectPoly(r.x, r.y, rsz.x, rsz.y, vertices, interior);\n}\n\np5.prototype.collideLinePoly = function(x1, y1, x2, y2, vertices) {\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current=0; current<vertices.length; current++) {\n\n    // get next vertex in list if we've hit the end, wrap around to 0\n    next = current+1;\n    if (next === vertices.length) next = 0;\n\n    // get the PVectors at our current position extract X/Y coordinates from each\n    var x3 = vertices[current].x;\n    var y3 = vertices[current].y;\n    var x4 = vertices[next].x;\n    var y4 = vertices[next].y;\n\n    // do a Line/Line comparison if true, return 'true' immediately and stop testing (faster)\n    var hit = this.collideLineLine(x1, y1, x2, y2, x3, y3, x4, y4);\n    if (hit) {\n      return true;\n    }\n  }\n  // never got a hit\n  return false;\n}\n\n\n// p5.vector version of collideLinePoly\np5.prototype.collideLinePolyVector = function(p1, p2, vertice){\n  return p5.prototype.collideLinePoly(p1.x, p1.y, p2.x, p2.y, vertice);\n}\n\np5.prototype.collidePolyPoly = function(p1, p2, interior) {\n  if (interior === undefined){\n    interior = false;\n  }\n\n  // go through each of the vertices, plus the next vertex in the list\n  var next = 0;\n  for (var current=0; current<p1.length; current++) {\n\n    // get next vertex in list, if we've hit the end, wrap around to 0\n    next = current+1;\n    if (next === p1.length) next = 0;\n\n    // get the PVectors at our current position this makes our if statement a little cleaner\n    var vc = p1[current];    // c for \"current\"\n    var vn = p1[next];       // n for \"next\"\n\n    //use these two points (a line) to compare to the other polygon's vertices using polyLine()\n    var collision = this.collideLinePoly(vc.x,vc.y,vn.x,vn.y,p2);\n    if (collision) return true;\n\n    //check if the either polygon is INSIDE the other\n    if(interior === true){\n      collision = this.collidePointPoly(p2[0].x, p2[0].y, p1);\n      if (collision) return true;\n      collision = this.collidePointPoly(p1[0].x, p1[0].y, p2);\n      if (collision) return true;\n    }\n  }\n\n  return false;\n}\n\np5.prototype.collidePolyPolyVector = function(p1, p2, interior) {\n  return p5.prototype.collidePolyPoly(p1, p2, interior);\n}\n\np5.prototype.collidePointTriangle = function(px, py, x1, y1, x2, y2, x3, y3) {\n\n  // get the area of the triangle\n  var areaOrig = this.abs( (x2-x1)*(y3-y1) - (x3-x1)*(y2-y1) );\n\n  // get the area of 3 triangles made between the point and the corners of the triangle\n  var area1 =    this.abs( (x1-px)*(y2-py) - (x2-px)*(y1-py) );\n  var area2 =    this.abs( (x2-px)*(y3-py) - (x3-px)*(y2-py) );\n  var area3 =    this.abs( (x3-px)*(y1-py) - (x1-px)*(y3-py) );\n\n  // if the sum of the three areas equals the original, we're inside the triangle!\n  if (area1 + area2 + area3 === areaOrig) {\n    return true;\n  }\n  return false;\n}\n\n// p5.vector version of collidePointTriangle\np5.prototype.collidePointTriangleVector = function(p, p1, p2, p3){\n  return p5.prototype.collidePointTriangle(p.x, p.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\n}\n\np5.prototype.collidePointPoint = function (x,y,x2,y2, buffer) {\n    if(buffer === undefined){\n      buffer = 0;\n    }\n\n    if(this.dist(x,y,x2,y2) <= buffer){\n      return true;\n    }\n\n  return false;\n};\n\n// p5.vector version of collidePointPoint\np5.prototype.collidePointPointVector = function(p1, p2, buffer){\n  return p5.prototype.collidePointPoint(p1.x,p1.y,p2.x,p2.y, buffer);\n}\n\np5.prototype.collidePointArc = function(px, py, ax, ay, arcRadius, arcHeading, arcAngle, buffer) {\n\n  if (buffer === undefined) {\n    buffer = 0;\n  }\n  // point\n  var point = this.createVector(px, py);\n  // arc center point\n  var arcPos = this.createVector(ax, ay);\n  // arc radius vector\n  var radius = this.createVector(arcRadius, 0).rotate(arcHeading);\n\n  var pointToArc = point.copy().sub(arcPos);\n\n  if (point.dist(arcPos) <= (arcRadius + buffer)) {\n    var dot = radius.dot(pointToArc);\n    var angle = radius.angleBetween(pointToArc);\n    if (dot > 0 && angle <= arcAngle / 2 && angle >= -arcAngle / 2) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// p5.vector version of collidePointArc\np5.prototype.collidePointArcVector = function(p1, a, arcRadius, arcHeading, arcAngle, buffer){\n  return p5.prototype.collidePointArc(p1.x, p1.y, a.x, a.y, arcRadius, arcHeading, arcAngle, buffer);\n}\n"]}