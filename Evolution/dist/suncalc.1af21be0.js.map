{"version":3,"sources":["../libs/suncalc/suncalc.js"],"names":["PI","Math","sin","cos","tan","asin","atan","atan2","acos","rad","dayMs","J1970","J2000","toJulian","date","valueOf","fromJulian","j","Date","toDays","e","rightAscension","l","b","declination","azimuth","H","phi","dec","altitude","siderealTime","d","lw","astroRefraction","h","solarMeanAnomaly","eclipticLongitude","M","C","P","sunCoords","L","ra","SunCalc","getPosition","lat","lng","c","times","addTime","angle","riseName","setName","push","J0","julianCycle","round","approxTransit","Ht","n","solarTransitJ","ds","hourAngle","observerAngle","height","sqrt","getSetJ","w","a","getTimes","dh","Jnoon","i","len","time","h0","Jset","Jrise","result","solarNoon","nadir","length","moonCoords","F","dt","dist","getMoonPosition","pa","distance","parallacticAngle","getMoonIllumination","s","m","sdist","inc","fraction","phase","hoursLater","getMoonTimes","inUTC","t","setUTCHours","setHours","hc","h1","h2","rise","set","xe","ye","roots","x1","x2","dx","abs","exports","module","define","amd","window"],"mappings":"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","file":"suncalc.1af21be0.js","sourceRoot":"..","sourcesContent":["/*\n (c) 2011-2015, Vladimir Agafonkin\n SunCalc is a JavaScript library for calculating sun/moon position and light phases.\n https://github.com/mourner/suncalc\n*/\n\n(function () { 'use strict';\n\n// shortcuts for easier to read formulas\n\nvar PI   = Math.PI,\n    sin  = Math.sin,\n    cos  = Math.cos,\n    tan  = Math.tan,\n    asin = Math.asin,\n    atan = Math.atan2,\n    acos = Math.acos,\n    rad  = PI / 180;\n\n// sun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n\n\n// date/time constants and conversions\n\nvar dayMs = 1000 * 60 * 60 * 24,\n    J1970 = 2440588,\n    J2000 = 2451545;\n\nfunction toJulian(date) { return date.valueOf() / dayMs - 0.5 + J1970; }\nfunction fromJulian(j)  { return new Date((j + 0.5 - J1970) * dayMs); }\nfunction toDays(date)   { return toJulian(date) - J2000; }\n\n\n// general calculations for position\n\nvar e = rad * 23.4397; // obliquity of the Earth\n\nfunction rightAscension(l, b) { return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l)); }\nfunction declination(l, b)    { return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l)); }\n\nfunction azimuth(H, phi, dec)  { return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi)); }\nfunction altitude(H, phi, dec) { return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H)); }\n\nfunction siderealTime(d, lw) { return rad * (280.16 + 360.9856235 * d) - lw; }\n\nfunction astroRefraction(h) {\n    if (h < 0) // the following formula works for positive altitudes only.\n        h = 0; // if h = -0.08901179 a div/0 would occur.\n\n    // formula 16.4 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n    // 1.02 / tan(h + 10.26 / (h + 5.10)) h in degrees, result in arc minutes -> converted to rad:\n    return 0.0002967 / Math.tan(h + 0.00312536 / (h + 0.08901179));\n}\n\n// general sun calculations\n\nfunction solarMeanAnomaly(d) { return rad * (357.5291 + 0.98560028 * d); }\n\nfunction eclipticLongitude(M) {\n\n    var C = rad * (1.9148 * sin(M) + 0.02 * sin(2 * M) + 0.0003 * sin(3 * M)), // equation of center\n        P = rad * 102.9372; // perihelion of the Earth\n\n    return M + C + P + PI;\n}\n\nfunction sunCoords(d) {\n\n    var M = solarMeanAnomaly(d),\n        L = eclipticLongitude(M);\n\n    return {\n        dec: declination(L, 0),\n        ra: rightAscension(L, 0)\n    };\n}\n\n\nvar SunCalc = {};\n\n\n// calculates sun position for a given date and latitude/longitude\n\nSunCalc.getPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c  = sunCoords(d),\n        H  = siderealTime(d, lw) - c.ra;\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: altitude(H, phi, c.dec)\n    };\n};\n\n\n// sun times configuration (angle, morning name, evening name)\n\nvar times = SunCalc.times = [\n    [-0.833, 'sunrise',       'sunset'      ],\n    [  -0.3, 'sunriseEnd',    'sunsetStart' ],\n    [    -6, 'dawn',          'dusk'        ],\n    [   -12, 'nauticalDawn',  'nauticalDusk'],\n    [   -18, 'nightEnd',      'night'       ],\n    [     6, 'goldenHourEnd', 'goldenHour'  ]\n];\n\n// adds a custom time to the times config\n\nSunCalc.addTime = function (angle, riseName, setName) {\n    times.push([angle, riseName, setName]);\n};\n\n\n// calculations for sun times\n\nvar J0 = 0.0009;\n\nfunction julianCycle(d, lw) { return Math.round(d - J0 - lw / (2 * PI)); }\n\nfunction approxTransit(Ht, lw, n) { return J0 + (Ht + lw) / (2 * PI) + n; }\nfunction solarTransitJ(ds, M, L)  { return J2000 + ds + 0.0053 * sin(M) - 0.0069 * sin(2 * L); }\n\nfunction hourAngle(h, phi, d) { return acos((sin(h) - sin(phi) * sin(d)) / (cos(phi) * cos(d))); }\nfunction observerAngle(height) { return -2.076 * Math.sqrt(height) / 60; }\n\n// returns set time for the given sun altitude\nfunction getSetJ(h, lw, phi, dec, n, M, L) {\n\n    var w = hourAngle(h, phi, dec),\n        a = approxTransit(w, lw, n);\n    return solarTransitJ(a, M, L);\n}\n\n\n// calculates sun times for a given date, latitude/longitude, and, optionally,\n// the observer height (in meters) relative to the horizon\n\nSunCalc.getTimes = function (date, lat, lng, height) {\n\n    height = height || 0;\n\n    var lw = rad * -lng,\n        phi = rad * lat,\n\n        dh = observerAngle(height),\n\n        d = toDays(date),\n        n = julianCycle(d, lw),\n        ds = approxTransit(0, lw, n),\n\n        M = solarMeanAnomaly(ds),\n        L = eclipticLongitude(M),\n        dec = declination(L, 0),\n\n        Jnoon = solarTransitJ(ds, M, L),\n\n        i, len, time, h0, Jset, Jrise;\n\n\n    var result = {\n        solarNoon: fromJulian(Jnoon),\n        nadir: fromJulian(Jnoon - 0.5)\n    };\n\n    for (i = 0, len = times.length; i < len; i += 1) {\n        time = times[i];\n        h0 = (time[0] + dh) * rad;\n\n        Jset = getSetJ(h0, lw, phi, dec, n, M, L);\n        Jrise = Jnoon - (Jset - Jnoon);\n\n        result[time[1]] = fromJulian(Jrise);\n        result[time[2]] = fromJulian(Jset);\n    }\n\n    return result;\n};\n\n\n// moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\n\nfunction moonCoords(d) { // geocentric ecliptic coordinates of the moon\n\n    var L = rad * (218.316 + 13.176396 * d), // ecliptic longitude\n        M = rad * (134.963 + 13.064993 * d), // mean anomaly\n        F = rad * (93.272 + 13.229350 * d),  // mean distance\n\n        l  = L + rad * 6.289 * sin(M), // longitude\n        b  = rad * 5.128 * sin(F),     // latitude\n        dt = 385001 - 20905 * cos(M);  // distance to the moon in km\n\n    return {\n        ra: rightAscension(l, b),\n        dec: declination(l, b),\n        dist: dt\n    };\n}\n\nSunCalc.getMoonPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c = moonCoords(d),\n        H = siderealTime(d, lw) - c.ra,\n        h = altitude(H, phi, c.dec),\n        // formula 14.1 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n        pa = atan(sin(H), tan(phi) * cos(c.dec) - sin(c.dec) * cos(H));\n\n    h = h + astroRefraction(h); // altitude correction for refraction\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: h,\n        distance: c.dist,\n        parallacticAngle: pa\n    };\n};\n\n\n// calculations for illumination parameters of the moon,\n// based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\n// Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n\nSunCalc.getMoonIllumination = function (date) {\n\n    var d = toDays(date || new Date()),\n        s = sunCoords(d),\n        m = moonCoords(d),\n\n        sdist = 149598000, // distance from Earth to Sun in km\n\n        phi = acos(sin(s.dec) * sin(m.dec) + cos(s.dec) * cos(m.dec) * cos(s.ra - m.ra)),\n        inc = atan(sdist * sin(phi), m.dist - sdist * cos(phi)),\n        angle = atan(cos(s.dec) * sin(s.ra - m.ra), sin(s.dec) * cos(m.dec) -\n                cos(s.dec) * sin(m.dec) * cos(s.ra - m.ra));\n\n    return {\n        fraction: (1 + cos(inc)) / 2,\n        phase: 0.5 + 0.5 * inc * (angle < 0 ? -1 : 1) / Math.PI,\n        angle: angle\n    };\n};\n\n\nfunction hoursLater(date, h) {\n    return new Date(date.valueOf() + h * dayMs / 24);\n}\n\n// calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\n\nSunCalc.getMoonTimes = function (date, lat, lng, inUTC) {\n    var t = new Date(date);\n    if (inUTC) t.setUTCHours(0, 0, 0, 0);\n    else t.setHours(0, 0, 0, 0);\n\n    var hc = 0.133 * rad,\n        h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\n        h1, h2, rise, set, a, b, xe, ye, d, roots, x1, x2, dx;\n\n    // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\n    for (var i = 1; i <= 24; i += 2) {\n        h1 = SunCalc.getMoonPosition(hoursLater(t, i), lat, lng).altitude - hc;\n        h2 = SunCalc.getMoonPosition(hoursLater(t, i + 1), lat, lng).altitude - hc;\n\n        a = (h0 + h2) / 2 - h1;\n        b = (h2 - h0) / 2;\n        xe = -b / (2 * a);\n        ye = (a * xe + b) * xe + h1;\n        d = b * b - 4 * a * h1;\n        roots = 0;\n\n        if (d >= 0) {\n            dx = Math.sqrt(d) / (Math.abs(a) * 2);\n            x1 = xe - dx;\n            x2 = xe + dx;\n            if (Math.abs(x1) <= 1) roots++;\n            if (Math.abs(x2) <= 1) roots++;\n            if (x1 < -1) x1 = x2;\n        }\n\n        if (roots === 1) {\n            if (h0 < 0) rise = i + x1;\n            else set = i + x1;\n\n        } else if (roots === 2) {\n            rise = i + (ye < 0 ? x2 : x1);\n            set = i + (ye < 0 ? x1 : x2);\n        }\n\n        if (rise && set) break;\n\n        h0 = h2;\n    }\n\n    var result = {};\n\n    if (rise) result.rise = hoursLater(t, rise);\n    if (set) result.set = hoursLater(t, set);\n\n    if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\n\n    return result;\n};\n\n\n// export as Node module / AMD module / browser variable\nif (typeof exports === 'object' && typeof module !== 'undefined') module.exports = SunCalc;\nelse if (typeof define === 'function' && define.amd) define(SunCalc);\nelse window.SunCalc = SunCalc;\n\n}());\n"]}